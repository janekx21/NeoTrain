module Evergreen.Migrate.V26 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Dict
import Evergreen.V25.Translation
import Evergreen.V25.Types
import Evergreen.V26.Translation
import Evergreen.V26.Types
import Lamdera.Migrations exposing (..)
import List
import Maybe


frontendModel : Evergreen.V25.Types.FrontendModel -> ModelMigration Evergreen.V26.Types.FrontendModel Evergreen.V26.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V25.Types.BackendModel -> ModelMigration Evergreen.V26.Types.BackendModel Evergreen.V26.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V25.Types.FrontendMsg -> MsgMigration Evergreen.V26.Types.FrontendMsg Evergreen.V26.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V25.Types.ToBackend -> MsgMigration Evergreen.V26.Types.ToBackend Evergreen.V26.Types.BackendMsg
toBackend old =
    MsgMigrated ( migrate_Types_ToBackend old, Cmd.none )


backendMsg : Evergreen.V25.Types.BackendMsg -> MsgMigration Evergreen.V26.Types.BackendMsg Evergreen.V26.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V25.Types.ToFrontend -> MsgMigration Evergreen.V26.Types.ToFrontend Evergreen.V26.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_Types_BackendModel : Evergreen.V25.Types.BackendModel -> Evergreen.V26.Types.BackendModel
migrate_Types_BackendModel old =
    { currentSaltIndex = old.currentSaltIndex
    , users = old.users |> Dict.map (\k -> migrate_Types_User)
    , sessions = old.sessions
    , currentTime = old.currentTime
    }


migrate_Types_FrontendModel : Evergreen.V25.Types.FrontendModel -> Evergreen.V26.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , page = old.page |> migrate_Types_Page
    , settings = old.settings |> migrate_Types_Settings
    , statistic = old.statistic |> List.map migrate_Types_PastDictation
    , authorised = old.authorised
    , appStatistic = old.appStatistic |> migrate_Types_AppStatistic
    }


migrate_Translation_Language : Evergreen.V25.Translation.Language -> Evergreen.V26.Translation.Language
migrate_Translation_Language old =
    case old of
        Evergreen.V25.Translation.German ->
            Evergreen.V26.Translation.German

        Evergreen.V25.Translation.English ->
            Evergreen.V26.Translation.English


migrate_Types_AppStatistic : Evergreen.V25.Types.AppStatistic -> Evergreen.V26.Types.AppStatistic
migrate_Types_AppStatistic old =
    old


migrate_Types_AuthModel : Evergreen.V25.Types.AuthModel -> Evergreen.V26.Types.AuthModel
migrate_Types_AuthModel old =
    { username = old.username
    , password = old.password
    , passwordVisibility = old.passwordVisibility
    , failed = old.failed |> migrate_Types_LoginFail
    }


migrate_Types_AuthMsg : Evergreen.V25.Types.AuthMsg -> Evergreen.V26.Types.AuthMsg
migrate_Types_AuthMsg old =
    case old of
        Evergreen.V25.Types.SetUsername p0 ->
            Evergreen.V26.Types.SetUsername p0

        Evergreen.V25.Types.SetPassword p0 ->
            Evergreen.V26.Types.SetPassword p0

        Evergreen.V25.Types.SetVisibility p0 ->
            Evergreen.V26.Types.SetVisibility p0

        Evergreen.V25.Types.TryLogin p0 p1 ->
            Evergreen.V26.Types.TryLogin p0 p1

        Evergreen.V25.Types.TryRegister p0 p1 ->
            Evergreen.V26.Types.TryRegister p0 p1

        Evergreen.V25.Types.ToInfo ->
            Evergreen.V26.Types.ToInfo

        Evergreen.V25.Types.WithoutLogin ->
            Evergreen.V26.Types.WithoutLogin

        Evergreen.V25.Types.ToggleTranslation ->
            Evergreen.V26.Types.ToggleTranslation


migrate_Types_Bucket : Evergreen.V25.Types.Bucket -> Evergreen.V26.Types.Bucket
migrate_Types_Bucket old =
    old |> List.map migrate_Types_PastDictation


migrate_Types_Dictation : Evergreen.V25.Types.Dictation -> Evergreen.V26.Types.Dictation
migrate_Types_Dictation old =
    old


migrate_Types_FrontendMsg : Evergreen.V25.Types.FrontendMsg -> Evergreen.V26.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V25.Types.UrlClicked p0 ->
            Evergreen.V26.Types.UrlClicked p0

        Evergreen.V25.Types.UrlChanged p0 ->
            Evergreen.V26.Types.UrlChanged p0

        Evergreen.V25.Types.NoOpFrontendMsg ->
            Evergreen.V26.Types.NoOpFrontendMsg

        Evergreen.V25.Types.PageMsg p0 ->
            Evergreen.V26.Types.PageMsg (p0 |> migrate_Types_PageMsg)

        Evergreen.V25.Types.Back ->
            Evergreen.V26.Types.Back

        Evergreen.V25.Types.SetSettings p0 ->
            Evergreen.V26.Types.SetSettings (p0 |> migrate_Types_Settings)

        Evergreen.V25.Types.OnHover p0 ->
            Evergreen.V26.Types.OnHover (p0 |> migrate_Types_Hover)

        Evergreen.V25.Types.Logout ->
            Evergreen.V26.Types.Logout

        Evergreen.V25.Types.FinishedDictation p0 p1 p2 p3 ->
            Evergreen.V26.Types.FinishedDictation p0 (p1 |> migrate_Types_Lesson) p2 p3

        Evergreen.V25.Types.ChangePage p0 ->
            Evergreen.V26.Types.ChangePage (p0 |> migrate_Types_Page)


migrate_Types_Hover : Evergreen.V25.Types.Hover -> Evergreen.V26.Types.Hover
migrate_Types_Hover old =
    old |> migrate_Types_Bucket


migrate_Types_KeyboardKey : Evergreen.V25.Types.KeyboardKey -> Evergreen.V26.Types.KeyboardKey
migrate_Types_KeyboardKey old =
    case old of
        Evergreen.V25.Types.Character p0 ->
            Evergreen.V26.Types.Character p0

        Evergreen.V25.Types.Control p0 ->
            Evergreen.V26.Types.Control p0


migrate_Types_Layout : Evergreen.V25.Types.Layout -> Evergreen.V26.Types.Layout
migrate_Types_Layout old =
    case old of
        Evergreen.V25.Types.Neo ->
            Evergreen.V26.Types.Neo

        Evergreen.V25.Types.NeoQwertz ->
            Evergreen.V26.Types.NeoQwertz

        Evergreen.V25.Types.Bone ->
            Evergreen.V26.Types.Bone

        Evergreen.V25.Types.AdNW ->
            Evergreen.V26.Types.AdNW

        Evergreen.V25.Types.KOY ->
            Evergreen.V26.Types.KOY

        Evergreen.V25.Types.NeoQwerty ->
            Evergreen.V26.Types.NeoQwerty

        Evergreen.V25.Types.Vou ->
            Evergreen.V26.Types.Vou

        Evergreen.V25.Types.Mine ->
            Evergreen.V26.Types.Mine

        Evergreen.V25.Types.Noted ->
            Evergreen.V26.Types.Noted


migrate_Types_Lesson : Evergreen.V25.Types.Lesson -> Evergreen.V26.Types.Lesson
migrate_Types_Lesson old =
    { layout = old.layout |> Maybe.map migrate_Types_Layout
    , title = old.title
    , content = old.content
    }


migrate_Types_LoginFail : Evergreen.V25.Types.LoginFail -> Evergreen.V26.Types.LoginFail
migrate_Types_LoginFail old =
    case old of
        Evergreen.V25.Types.NotAsked ->
            Evergreen.V26.Types.NotAsked

        Evergreen.V25.Types.WrongUsernameOrPassword ->
            Evergreen.V26.Types.WrongUsernameOrPassword

        Evergreen.V25.Types.UsernameOrPasswordInvalid ->
            Evergreen.V26.Types.UsernameOrPasswordInvalid


migrate_Types_Menu : Evergreen.V25.Types.Menu -> Evergreen.V26.Types.Menu
migrate_Types_Menu old =
    { current = old.current |> Maybe.map migrate_Types_Lesson
    }


migrate_Types_Mods : Evergreen.V25.Types.Mods -> Evergreen.V26.Types.Mods
migrate_Types_Mods old =
    old


migrate_Types_Page : Evergreen.V25.Types.Page -> Evergreen.V26.Types.Page
migrate_Types_Page old =
    case old of
        Evergreen.V25.Types.MenuPage p0 ->
            Evergreen.V26.Types.MenuPage (p0 |> migrate_Types_Menu)

        Evergreen.V25.Types.TypingPage p0 ->
            Evergreen.V26.Types.TypingPage (p0 |> migrate_Types_TypingModel)

        Evergreen.V25.Types.TypingStatisticPage p0 ->
            Evergreen.V26.Types.TypingStatisticPage (p0 |> migrate_Types_TypingStatisticModel)

        Evergreen.V25.Types.SettingsPage p0 ->
            Evergreen.V26.Types.SettingsPage p0

        Evergreen.V25.Types.StatisticPage p0 ->
            Evergreen.V26.Types.StatisticPage (p0 |> migrate_Types_Hover)

        Evergreen.V25.Types.AuthPage p0 ->
            Evergreen.V26.Types.AuthPage (p0 |> migrate_Types_AuthModel)

        Evergreen.V25.Types.InfoPage ->
            Evergreen.V26.Types.InfoPage


migrate_Types_PageMsg : Evergreen.V25.Types.PageMsg -> Evergreen.V26.Types.PageMsg
migrate_Types_PageMsg old =
    case old of
        Evergreen.V25.Types.TypingMsg p0 ->
            Evergreen.V26.Types.TypingMsg (p0 |> migrate_Types_TypingMsg)

        Evergreen.V25.Types.AuthMsg p0 ->
            Evergreen.V26.Types.AuthMsg (p0 |> migrate_Types_AuthMsg)

        Evergreen.V25.Types.SettingsMsg p0 ->
            Evergreen.V26.Types.SettingsMsg (p0 |> migrate_Types_SettingsMsg)


migrate_Types_PastDictation : Evergreen.V25.Types.PastDictation -> Evergreen.V26.Types.PastDictation
migrate_Types_PastDictation old =
    { errors = old.errors
    , lesson = old.lesson |> migrate_Types_Lesson
    , duration = old.duration
    , finished = old.finished
    }


migrate_Types_Settings : Evergreen.V25.Types.Settings -> Evergreen.V26.Types.Settings
migrate_Types_Settings old =
    { blockOnError = old.blockOnError |> migrate_Types_WaitingFor
    , fontSize = old.fontSize
    , paddingLeft = old.paddingLeft
    , paddingRight = old.paddingRight
    , layout = old.layout |> migrate_Types_Layout
    , theme = old.theme |> migrate_Types_Theme
    , language = old.language |> migrate_Translation_Language
    }


migrate_Types_SettingsMsg : Evergreen.V25.Types.SettingsMsg -> Evergreen.V26.Types.SettingsMsg
migrate_Types_SettingsMsg old =
    case old of
        Evergreen.V25.Types.SetLayer p0 ->
            Evergreen.V26.Types.SetLayer p0


migrate_Types_Theme : Evergreen.V25.Types.Theme -> Evergreen.V26.Types.Theme
migrate_Types_Theme old =
    { name = old.name |> migrate_Types_ThemeName
    , dark = old.dark
    , rounding = old.rounding
    , borderWidth = old.borderWidth
    }


migrate_Types_ThemeName : Evergreen.V25.Types.ThemeName -> Evergreen.V26.Types.ThemeName
migrate_Types_ThemeName old =
    case old of
        Evergreen.V25.Types.WheatField ->
            Evergreen.V26.Types.WheatField

        Evergreen.V25.Types.ElectricFields ->
            Evergreen.V26.Types.ElectricFields

        Evergreen.V25.Types.CandyLand ->
            Evergreen.V26.Types.CandyLand

        Evergreen.V25.Types.NeoClassic ->
            Evergreen.V26.Types.NeoClassic

        Evergreen.V25.Types.Dracula ->
            Evergreen.V26.Types.Dracula


migrate_Types_ToBackend : Evergreen.V25.Types.ToBackend -> Evergreen.V26.Types.ToBackend
migrate_Types_ToBackend old =
    case old of
        Evergreen.V25.Types.UpdateSettings p0 ->
            Evergreen.V26.Types.UpdateSettings (p0 |> migrate_Types_Settings)

        Evergreen.V25.Types.GetSettings ->
            Evergreen.V26.Types.GetSettings

        Evergreen.V25.Types.InsertUser p0 p1 ->
            Evergreen.V26.Types.InsertUser p0 p1

        Evergreen.V25.Types.InsertSession p0 p1 ->
            Evergreen.V26.Types.InsertSession p0 p1

        Evergreen.V25.Types.GetSession ->
            Evergreen.V26.Types.GetSession

        Evergreen.V25.Types.RemoveSession ->
            Evergreen.V26.Types.RemoveSession

        Evergreen.V25.Types.ConsStatistic p0 ->
            Evergreen.V26.Types.ConsStatistic (p0 |> migrate_Types_PastDictation)

        Evergreen.V25.Types.GetStatistic ->
            Evergreen.V26.Types.GetStatistic

        Evergreen.V25.Types.GetAppStatistic ->
            Evergreen.V26.Types.GetAppStatistic

        Evergreen.V25.Types.GetAllPoints p0 ->
            Evergreen.V26.Types.GetAllPoints (p0 |> migrate_Types_Lesson)


migrate_Types_ToFrontend : Evergreen.V25.Types.ToFrontend -> Evergreen.V26.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V25.Types.GotSettings p0 ->
            Evergreen.V26.Types.GotSettings (p0 |> migrate_Types_Settings)

        Evergreen.V25.Types.KickOut ->
            Evergreen.V26.Types.KickOut

        Evergreen.V25.Types.RegisterFailed ->
            Evergreen.V26.Types.RegisterFailed

        Evergreen.V25.Types.LoginSuccessful ->
            Evergreen.V26.Types.LoginSuccessful

        Evergreen.V25.Types.LoginFailed ->
            Evergreen.V26.Types.LoginFailed

        Evergreen.V25.Types.UpdateStatistic p0 ->
            Evergreen.V26.Types.UpdateStatistic (p0 |> List.map migrate_Types_PastDictation)

        Evergreen.V25.Types.UpdateAppStatistic p0 ->
            Evergreen.V26.Types.UpdateAppStatistic (p0 |> migrate_Types_AppStatistic)

        Evergreen.V25.Types.UpdateAllPoints p0 ->
            Evergreen.V26.Types.UpdateAllPoints p0


migrate_Types_TypingModel : Evergreen.V25.Types.TypingModel -> Evergreen.V26.Types.TypingModel
migrate_Types_TypingModel old =
    { dictation = old.dictation |> migrate_Types_Dictation
    , madeError = old.madeError
    , errors = old.errors
    , mods = old.mods |> migrate_Types_Mods
    , lesson = old.lesson |> migrate_Types_Lesson
    , duration = old.duration
    , paused = old.paused
    , showKeyboard = old.showKeyboard
    , textOffset = old.textOffset
    , textSpeed = old.textSpeed
    }


migrate_Types_TypingMsg : Evergreen.V25.Types.TypingMsg -> Evergreen.V26.Types.TypingMsg
migrate_Types_TypingMsg old =
    case old of
        Evergreen.V25.Types.KeyDown p0 ->
            Evergreen.V26.Types.KeyDown (p0 |> migrate_Types_KeyboardKey)

        Evergreen.V25.Types.KeyUp p0 ->
            Evergreen.V26.Types.KeyUp (p0 |> migrate_Types_KeyboardKey)

        Evergreen.V25.Types.KeyDownBatch p0 ->
            Evergreen.V26.Types.KeyDownBatch p0

        Evergreen.V25.Types.TickTypingTime ->
            Evergreen.V26.Types.TickTypingTime

        Evergreen.V25.Types.AnimationFrameDelta p0 ->
            Evergreen.V26.Types.AnimationFrameDelta p0

        Evergreen.V25.Types.Pause ->
            Evergreen.V26.Types.Pause

        Evergreen.V25.Types.Play ->
            Evergreen.V26.Types.Play

        Evergreen.V25.Types.Restart ->
            Evergreen.V26.Types.Restart

        Evergreen.V25.Types.ToggleKeyboard ->
            Evergreen.V26.Types.ToggleKeyboard

        Evergreen.V25.Types.Exit ->
            Evergreen.V26.Types.Exit

        Evergreen.V25.Types.NoOp ->
            Evergreen.V26.Types.NoOp


migrate_Types_TypingStatisticModel : Evergreen.V25.Types.TypingStatisticModel -> Evergreen.V26.Types.TypingStatisticModel
migrate_Types_TypingStatisticModel old =
    { past = old.past |> migrate_Types_PastDictation
    , allPoints = old.allPoints
    , fromLesson = old.fromLesson
    }


migrate_Types_User : Evergreen.V25.Types.User -> Evergreen.V26.Types.User
migrate_Types_User old =
    { username = old.username
    , passwordHash = old.passwordHash
    , passwordSalt = old.passwordSalt
    , settings = old.settings |> migrate_Types_Settings
    , pastDictations = old.pastDictations |> List.map migrate_Types_PastDictation
    }


migrate_Types_WaitingFor : Evergreen.V25.Types.WaitingFor -> Evergreen.V26.Types.WaitingFor
migrate_Types_WaitingFor old =
    case old of
        Evergreen.V25.Types.OneBackspace ->
            Evergreen.V26.Types.OneBackspace

        Evergreen.V25.Types.CorrectLetter ->
            Evergreen.V26.Types.CorrectLetter
